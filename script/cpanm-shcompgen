#!perl

# NO_PERINCI_CMDLINE_SCRIPT
# FRAGMENT id=shcompgen-hint command=_cpanm

# DATE
# VERSION

use strict;
use warnings;
use File::Which;

my $cpanm_path = which("cpanm") or die "Can't find cpanm in PATH\n";

my @cmd = (
    $^X, "-MModule::Load::In::INIT=App::cpanminus::script::Patch::RunShcompgen=-warn_target_loaded;0",
    $cpanm_path,
    @ARGV,
);

print "cpanm-shcompgen: exec: ".join(" ", @cmd), "\n" if $ENV{DEBUG};
exec @cmd;

# ABSTRACT: Install modules from CPAN (and activate shell completion)
# PODNAME:

=head1 SYNOPSIS

Use like you would use L<cpanm>:

 % cpanm-shcompgen -n Some::Module ...

To alias it as C<cpanm> in your shell, e.g. in bash:

 alias cpanm=cpanm-shcompgen


=head1 DESCRIPTION

L<cpanm-shcompgen> is a simple wrapper over L<cpanm>. This command:

 % cpanm-shcompgen -n App::PMUtils

is equivalent to:

 % perl -MModule::Load::In::INIT=App::cpanminus::script::Patch::RunShcompgen cpanm -n App::PMUtils

That is, it will cause B<cpanm> to execute L<shcompgen> (C<shcompgen generate
--replace ...>) for all the installed scripts in the distribution. This means,
shell tab completion will be activated immediately after installation.


=head1 SEE ALSO

L<cpanm>

L<shcompgen>

L<App::cpanminus::script::Patch::RunShcompgen>
